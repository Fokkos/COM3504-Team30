@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  /* For some unknown reason, dark mode needs to be the default as
       the .dark selector doesn't seem to be picked up.
     */
  :root {
    --text: #f1eee7;
    --background: #212121;
    --primary: #a7c957;
    --secondary: #9adcc7;
    --accent: #2d5936;

    /* Secondary is too light to use 'text colour' on dark theme, so need this */
    --on-secondary: var(--background);

    /* Light mode colours */
    --background-inverse: #f1eee7;
    --text-inverse: #262c26;

    /* Mix to get a hover colours */
    --text-hover: color-mix(in srgb, var(--text), #000 33%);
    --text-inverse-hover: color-mix(in srgb, var(--text-inverse), #fff 33%);

    --background-hover: color-mix(in srgb, var(--background), #fff 20%);
    --background-inverse-hover: color-mix(
      in srgb,
      var(--background-inverse),
      #000 20%
    );

    --background-light: color-mix(in srgb, var(--background), #fff 20%);
    --background-inverse-light: color-mix(
      in srgb,
      var(--background-inverse),
      #000 20%
    );

    --primary-hover: color-mix(in srgb, var(--primary), #000 33%);
    --secondary-hover: color-mix(in srgb, var(--secondary), #000 33%);
  }

  .light {
    --text: #262c26;
    --background: #f1eee7;
    --primary: #2d5936;
    --secondary: #9adcc7;
    --accent: #b9d478;

    /* Secondary is too light to use 'text colour' on dark theme, so need this */
    --on-secondary: var(--text);

    /* Dark mode colours */
    --background-inverse: #212121;
    --text-inverse: #f1eee7;

    /* Mix to get a hover colours */
    --text-hover: color-mix(in srgb, var(--text), #fff 33%);
    --text-inverse-hover: color-mix(in srgb, var(--text-inverse), #000 33%);

    --background-hover: color-mix(in srgb, var(--background), #000 20%);
    --background-inverse-hover: color-mix(
      in srgb,
      var(--background-inverse),
      #fff 20%
    );

    --background-light: color-mix(in srgb, var(--background), #fff 20%);
    --background-inverse-light: color-mix(
      in srgb,
      var(--background-inverse),
      #000 20%
    );

    --primary-hover: color-mix(in srgb, var(--primary), #fff 33%);
    --secondary-hover: color-mix(in srgb, var(--secondary), #000 33%);
  }
}

/*===GENERAL RULES============================================================*/
main {
  @apply flex-fill-remaining-space;
}

/*===UTILITIES================================================================*/
@layer utilities {
  .font-dm-sans {
    font-family: "DM Sans", sans-serif;
    font-optical-sizing: auto;
  }

  .font-emoji {
    font-family: "Noto Color Emoji", sans-serif;
    font-weight: 400;
    font-style: normal;
  }


  .flex-fill-remaining-space {
    flex: 1 0 auto;
  }

  .hover-button {
    cursor: pointer;
    transition:
      background-color 0.2s ease-in-out,
      color 0.2s ease-in-out,
      stroke 0.2s ease-in-out;
    background-color: var(--primary);
    color: var(--background);
    stroke: var(--background);

    &:hover {
      @media (hover: hover) {
        background-color: var(--primary-hover);
      }
    }

    &-secondary {
      cursor: pointer;
      transition:
        background-color 0.2s ease-in-out,
        color 0.2s ease-in-out,
        stroke 0.2s ease-in-out;

      background-color: var(--secondary);
      color: var(--on-secondary);
      stroke: var(--on-secondary);

      &:hover {
        @media (hover: hover) {
          background-color: var(--secondary-hover);
        }
      }
    }
  }

  .hover-link {
    cursor: pointer;
    transition:
      color 0.2s ease-in-out,
      stroke 0.2s ease-in-out;

    color: var(--text);
    stroke: var(--text);

    &:hover {
      @media (hover: hover) {
        color: var(--text-hover);
        stroke: var(--text-hover);
      }
    }

    &-inverse {
      cursor: pointer;
      transition:
        color 0.2s ease-in-out,
        stroke 0.2s ease-in-out;

      color: var(--text-inverse);
      stroke: var(--text-inverse);

      &:hover {
        @media (hover: hover) {
          color: var(--text-inverse-hover);
          stroke: var(--text-inverse-hover);
        }
      }
    }
  }
}

/*===SITE-WIDE================================================================*/
input[type="checkbox"] {
  position: relative;
  appearance: none;
  border: 2px solid var(--background-inverse);
  background-color: var(--background);
  @apply dark:bg-background-inverse;

  &:checked {
    background-color: var(--primary);

    &:after {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      color: var(--background);
      margin: auto;
      content: "✔";
    }
  }

  &:indeterminate {
    background-color: var(--secondary);

    &:after {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      color: var(--text);
      @apply dark:text-background;
      @apply font-extrabold;
      margin: auto;
      content: "—";
    }
  }
}

#nav-links {
  @media screen(max-md) {
    @apply pt-4;
    @apply -z-10;
    @apply flex-col;
    @apply absolute;
    @apply w-screen;

    bottom: 0;

    transform: translateY(0);

    transition: transform 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  }

  a {
    @media screen(max-md) {
      @apply hover-link-inverse;
      @apply dark:hover-link;
    }
    @media screen(md) {
      @apply hover-link;
    }
  }

  &.active {
    @media screen(max-md) {
      transform: translateY(100%);
    }
  }
}

#nav-shadow {
  &.active {
    opacity: 85%;
    pointer-events: auto;
  }

  transition: opacity 1s cubic-bezier(0.4, 0, 0.2, 1);
}

#theme-toggle {
  height: 2rem;
  aspect-ratio: 1.75;
  border-radius: 25px;
  display: flex;
  align-items: center;
  cursor: pointer;
  padding: 0 5px;

  > #moving-switch {
    height: 1.5rem;
    aspect-ratio: 1;
    border-radius: 50%;
    transition: transform 0.1s ease-in-out;
  }

  &[data-theme='dark'] > #moving-switch {
    transform: translateX(100%);
  }
}

.material-symbols-outlined {
  /* Recommended icon sizes */
  &.opsz-20 {
    font-size: 20px;
    font-variation-settings:
      'FILL' 1,
      'OPSZ' 20;
  }
  &.opsz-24 {
    font-size: 24px;
    font-variation-settings:
      'FILL' 1,
      'OPSZ' 24;
  }
  &.opsz-40 {
    font-size: 40px;
    font-variation-settings:
      'FILL' 1,
      'OPSZ' 40;
  }
  &.opsz-48 {
    font-size: 48px;
    font-variation-settings:
      'FILL' 1,
      'OPSZ' 48;
  }
}

.plant-card {
  .plant-info,
  .plant-name,
  .plant-name div {
    transition:
      transform 0.35s ease-out,
      padding-top 0.35s ease-out,
      opacity 0.35s ease-out;
  }

  .plant-info {
    background-color: color-mix(
      in srgb,
      var(--text),
      rgba(255, 255, 255, 0) 20%
    );
    transform: translateY(100%);
    /* Prevent issues when card is fractional pixels wide */
    width: calc(100% + 1px);
  }

  .plant-name {
    transform: translateY(-100%);
  }

  &:hover, &.hover {
    .plant-info,
    .plant-name {
      transform: translateY(0);
    }

    .plant-name {
      padding-top: 0;

      div {
        opacity: 0;
      }
    }
  }
}

.modal {
  pointer-events: none;
  z-index: 1000;

  .modal-overlay {
    opacity: 0;
    transition: opacity .5s ease-in-out;
  }

  .modal-container {
    opacity: 0;
    transform: translateY(50px);
    transition: opacity .5s ease-in-out, transform .5s ease-in-out;
  }

  &.active {
    pointer-events: auto;

    .modal-overlay {
      opacity: 0.5;
    }

    .modal-container {
      opacity: 1;
      transform: translateY(0);
    }
  }
}

.modal-body {
  max-height: calc(100vh - 210px);
  overflow-y: auto;
}

.has-tooltip {
  position: relative;

  .tooltip-content {
    @apply text-sm;
    @apply text-center;
    @apply w-24;
    @apply rounded-lg;
    @apply px-1;
    @apply py-2;

    position: absolute;
    z-index: 100;

    background-color: black;
    color: #f1eee7;

    opacity: 0;
    transition: opacity .5s ease-in-out;
    pointer-events: none;

    &.tooltip-bottom {
      top: calc(105% + 10px);
      left: 50%;
      transform: translateX(-50%);

      &::after {
        content: " ";
        position: absolute;
        bottom: 100%;  /* At the top of the tooltip */
        left: 50%;
        margin-left: -10px;
        border-width: 10px;
        border-style: solid;
        border-color: transparent transparent black transparent;
      }
    }

    &.tooltip-top {
      bottom: calc(105% + 10px);
      left: 50%;
      transform: translateX(-50%);

      &::after {
        content: " ";
        position: absolute;
        top: 100%;  /* At the bottom of the tooltip */
        left: 50%;
        margin-left: -10px;
        border-width: 10px;
        border-style: solid;
        border-color: black transparent transparent transparent;
      }
    }
  }

  &:hover, &.hover {
    .tooltip-content {
      opacity: 1;
    }
  }
}
